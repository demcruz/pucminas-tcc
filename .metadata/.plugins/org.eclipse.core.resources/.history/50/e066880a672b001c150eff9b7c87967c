package br.com.gsl.controleDeAcesso.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

import br.com.gsl.controleDeAcesso.entity.User;
import br.com.gsl.controleDeAcesso.repository.UserRepository;
import org.springframework.security.crypto.password.PasswordEncoder;


@Service
public class UserService implements UserDetailsService {

	private final UserRepository userRepository;
	
	@Autowired 
	private PasswordEncoder passwordEncoder;

	@Autowired
	public UserService(UserRepository userRepository) {
		this.userRepository = userRepository;
	}
	public User save(User body) {
		body.setPassword(passwordEncoder.encode(body.getPassword()));
		return userRepository.save(body);
	}
	

	@Override
	public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
		var user = userRepository.findByUserName(username);
		if (user != null) {
			return user;
		} else {
			throw new UsernameNotFoundException(" Username " + username + " not found");
		}
	}
	
	public User findByUsername(final String username) {
		return userRepository.findByUsername(username).orElse(null);
	}

}
